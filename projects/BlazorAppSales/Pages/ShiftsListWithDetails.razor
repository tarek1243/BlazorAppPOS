@page "/ShiftsDetails"
@using BlazorAppSales.Data;
@using ClassLibraryModels;

@inject AuthenticationStateProvider authenticationStateProvider

@inject ShiftService ShiftService
<AuthorizeView>
    <Authorized>
        <h1>Shifts</h1>

        @if (shifts != null)
        {
            <table class="table">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Employee Number</th>
                        <th>Branch</th>
                        <th>Company</th>
                        <th>Start Time</th>
                        <th>End Time</th>
                        <th>Order Count</th>
                        <th>Total Sales</th>
                    </tr>
                </thead>
                <tbody>

                    @foreach (var shift in shifts.Where(s => s.Orders.Count() > 0))
                    {
                        <tr>
                            <td>
                                <button class="btn btn-primary" @onclick="() =>  shift.ShowLines=!shift.ShowLines ">
                                    @if (shift.ShowLines)
                                    {
                                        <span>-</span>
                                    }
                                    else
                                    {
                                        <span>+</span>
                                    }
                                </button>
                                <a href="@($"/shifts/{shift.Id}")">@shift.Id</a>
                            </td>
                            <td>@shift.EmployeeNumber</td>
                            <td>@shift.Branch</td>
                            <td>@shift.CompanyName</td>
                            <td>@shift.OpenedAt</td>
                            <td>@shift.ClosedAt</td>
                            <td>@shift.Orders.Count()</td>
                            <td>@shift.Orders.Sum(o => o.Total)</td>

                        </tr>

                        @if (shift.ShowLines)
                        {
                            @if (shift.Orders.Count > 0)
                            {
                                <tr>
                                    <td colspan="6">
                                        <BlazorAppSales.Pages.Components.ListOfOrdersComponent orders=shift.Orders></BlazorAppSales.Pages.Components.ListOfOrdersComponent>
                                         
                                    </td>
                                </tr>
                            }
                        }
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>Loading...</p>
        }

    </Authorized>
    <NotAuthorized>
        <div id="login" class="big-fancy-div" onclick="window.location.href='Identity/Account/Login'">
            Log In
        </div>

        <div id="register" class="big-fancy-div" onclick="window.location.href='Identity/Account/Register'">
            Register
        </div>
    </NotAuthorized>
</AuthorizeView>

@code {

    // @inject AuthenticationStateProvider authenticationStateProvider
    //Util.ClassCurrentSessionUtil.GetUserEmail
    OrderService os = new OrderService();

    private List<Shift> shifts;
    ApplicationDbContext db_identity = new ApplicationDbContext();
    WebApp1User currentUser;
    protected override async Task OnInitializedAsync()
    {
        string currentUserEmail = await Util.ClassCurrentSessionUtil.GetUserEmail(authenticationStateProvider);
        if (currentUserEmail != "")
        {
            currentUser = db_identity.Users.Where(u => u.Email == currentUserEmail).First();
            shifts = await ShiftService.GetShiftsWithOrdersSummary(currentUser.CompanyName);
            if (shifts.Count() > 0)
                shifts[0].ShowLines = true;
        }
    }
}
