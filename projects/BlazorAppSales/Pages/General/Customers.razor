@page "/customers"
@inject IJSRuntime jsRuntime
@inject CustomerService customerService
@inject AuthenticationStateProvider authenticationStateProvider

@using BlazorAppSales.Data;
@using ClassLibraryModels;
@using Microsoft.AspNetCore.Components.Rendering;
@using Microsoft.EntityFrameworkCore;

<h3>Customers</h3>


<AuthorizeView>
    <Authorized>
        <div>
            <span style="float:right">
                <button class="btn btn-primary" @onclick="() => SaveTransactions()">Save</button>
                <button class="btn btn-success" @onclick="() => add()">Add</button>
            </span>

            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Phone</th>
                        <th>Group</th>
                        <th>Orders</th>
                        <th>Points</th>
                        <th>...</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var customer in customers)
                    {
                        <tr>
                            <td>
                                <input type="text" @bind-value="@customer.Name" class="form-control" />
                            </td>
                            <td>
                                <input type="email" @bind-value="@customer.Email" class="form-control" />
                            </td>
                            <td>
                                <input type="tel" @bind-value="@customer.Phone" class="form-control" />
                            </td>
                            <td>
                                <input type="text" @bind-value="@customer.CustGroup" class="form-control" />
                            </td>
                            <td>
                                @if (@customer.Orders.Count() == 0)
                                {
                                    <button class="btn btn-danger btn-sm" @onclick="() => Delete(customer)">
                                        <i class="bi bi-trash">X</i>
                                    </button>
                                }
                                else
                                {
                                    @customer.Orders.Count()
                                }
                            </td>


                            <td>
                                <input type="text" disabled @bind-value="@customer.LoyaltyPoints" class="form-control" />
                            </td>
                            <td>
                                <button class="btn btn-primary" @onclick="() =>  customer.ShowLines=!customer.ShowLines ">
                                    @if (customer.ShowLines)
                                    {
                                        <span>-</span>
                                    }
                                    else
                                    {
                                        <span>+</span>
                                    }
                                </button>
                            </td>
                        </tr>

                        @if (customer.ShowLines)
                        {
                            @if (customer.Orders.Count > 0)
                            {
                                <tr>
                                    <td colspan="10">
                                        <BlazorAppSales.Pages.Components.ListOfOrdersComponent orders=customer.Orders></BlazorAppSales.Pages.Components.ListOfOrdersComponent>

                                    </td>
                                </tr>
                            }
                        }
                    }
                </tbody>
            </table>
        </div>


    </Authorized>
    <NotAuthorized>
        <BlazorAppSales.Pages.Components.LogInRegisterBigBoxsComponent></BlazorAppSales.Pages.Components.LogInRegisterBigBoxsComponent>
    </NotAuthorized>
</AuthorizeView>

@code {

    DbContextMainData DbContext = new DbContextMainData();
    private List<Customer> customers { get; set; } = new List<Customer>();

    ApplicationDbContext db_identity = new ApplicationDbContext();
    WebApp1User currentUser;
    protected override async Task OnInitializedAsync()
    {
        string currentUserEmail = await Util.ClassCurrentSessionUtil.GetUserEmail(authenticationStateProvider);

        if (currentUserEmail != "")
        {
            currentUser = db_identity.Users.Where(u => u.Email == currentUserEmail).First();
            customers = await customerService.GetCustomersWithOrdersSummary(currentUser.CompanyName);
            // if (customers.Count() > 0)
            //   customers[0].ShowLines = true;
        }
    }

    private void Delete(Customer cust)
    {
        customers.Remove(cust);//= DbContext.Pos_Customers.Include(o => o.Orders).ToList();
        DbContext.Pos_Customers.Remove(cust);
    }

    private void add()
    {
        Customer cust = new Customer();
        cust.CompanyName = currentUser.CompanyName;
        cust.Orders = new List<Order>();
        customers.Add(cust);//= DbContext.Pos_Customers.Include(o => o.Orders).ToList();
        DbContext.Pos_Customers.Add(cust);
    }

    private void SaveTransactions()
    {
        using (var dbContext = new DbContextMainData()) // Replace with your EF Core DbContext
        {
            foreach (var c in customers)
            {
                if (dbContext.Pos_Customers.Entry(c).State == EntityState.Added)
                    dbContext.Pos_Customers.Add(c);
                else if (dbContext.Pos_Customers.Entry(c).State == EntityState.Modified)
                    dbContext.Pos_Customers.Update(c);
                else if (dbContext.Pos_Customers.Entry(c).State == EntityState.Detached)
                {
                    dbContext.Pos_Customers.Attach(c);
                    dbContext.Pos_Customers.Update(c);
                }
            }
            dbContext.SaveChanges();
        }
    }


}
